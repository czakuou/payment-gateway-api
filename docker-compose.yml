x-db-envs: &db-envs
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
  POSTGRES_HOST: db
  POSTGRES_DB: app

x-app-envs: &app-envs
  PYTHONDEVMODE: 1
  DOCS: 1
  LOG_JSON: 0
  <<: *db-envs

x-app-base: &app-base
  build:
    context: .
    target: dev
  volumes:
    - .:/app/

x-db-base: &db-base
  image: postgres:14
  environment:
    <<: *db-envs
  healthcheck:
    test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "app" ]
    start_period: 1s
    timeout: 1s
    interval: 1s
    retries: 10


services:
  app:
    <<: *app-base
    environment:
      <<: *app-envs
      DEBUG: 1
      POSTGRES_HOST: db
    depends_on:
      alembic:
        condition: service_started
    ports:
      - "8000:8000"

  alembic:
    <<: *app-base
    entrypoint: alembic
    command: upgrade head
    restart: "no"
    environment:
      <<: *app-envs
    depends_on:
      db:
        condition: service_healthy

  db:
    <<: *db-base
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  tests:
    <<: *app-base
    entrypoint: pytest
    environment:
      <<: *app-envs
      POSTGRES_HOST: tests-db
    depends_on:
      tests-db:
        condition: service_healthy

  tests-db:
    <<: *db-base
    tmpfs:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  db-data:
